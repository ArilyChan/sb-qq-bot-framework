export declare type Observed<T, R = any> = T & {
    _diff: Partial<T>;
    _update: () => R;
    _merge: (value: Partial<T>) => Observed<T, R>;
    __proxyGetters__: Partial<T>;
    __updateCallback__: UpdateFunction<T, R>;
};
declare type UpdateFunction<T, R> = (diff: Partial<T>) => R;
export declare function observe<T extends object>(target: T, label?: string | number): Observed<T, void>;
export declare function observe<T extends object, R>(target: T, update: UpdateFunction<T, R>, label?: string | number): Observed<T, R>;
export {};
//# sourceMappingURL=observe.d.ts.map