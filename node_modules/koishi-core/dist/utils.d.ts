import { UserData } from './database';
import { NextFunction } from './context';
import { Command, CommandHint } from './command';
import { Meta } from './meta';
export declare function getTargetId(target: string | number): number;
export declare function getUsage(name: string, user: Pick<UserData, 'usage'>, time?: number): import("./database").Usage;
interface UsageOptions {
    maxUsage?: number;
    minInterval?: number;
    timestamp?: number;
}
export declare function updateUsage(name: string, user: Pick<UserData, 'usage'>, options?: UsageOptions): CommandHint.USAGE_EXHAUSTED | CommandHint.TOO_FREQUENT;
interface SuggestOptions {
    target: string;
    items: string[];
    meta: Meta<'message'>;
    next: NextFunction;
    prefix: string;
    suffix: string;
    coefficient?: number;
    disable?: (name: string) => boolean;
    command: Command | ((suggestion: string) => Command);
    execute: (suggestion: string, meta: Meta<'message'>, next: NextFunction) => any;
}
export declare function showSuggestions(options: SuggestOptions): Promise<void>;
export {};
